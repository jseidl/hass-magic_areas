{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83e\ude84 Magic Areas for Home Assistant","text":"<p>Welcome to the Magic Areas documentation! Magic Areas is a Home Assistant custom integration that brings context-aware, state-driven automation to your smart home.</p> <p>Instead of configuring each entity manually, Magic Areas leverages areas, meta-areas, and presence sensing to create smart groups and advanced automations \u2014 with zero YAML required.</p>"},{"location":"#what-magic-areas-does","title":"\u2728 What Magic Areas Does","text":"<ul> <li>Detects presence in each area using multiple sources (motion sensors, media players, device trackers, BLE beacons, and more).</li> <li>Creates smart groups (lights, fans, climate, media players) that respond to an area\u2019s state automatically.</li> <li>Supports secondary states like <code>dark</code>, <code>sleep</code>, and <code>extended</code> for context-aware automation.</li> <li>Provides meta-areas (e.g., Interior, Exterior, Global, Floors) to coordinate multiple areas at once.</li> <li>Adds advanced features like:<ul> <li>\ud83d\udca1 Automatic Light Control</li> <li>\ud83c\udf21\ufe0f Automatic Climate Control</li> <li>\ud83d\udcca Aggregation sensors</li> <li>\ud83d\udee1\ufe0f Area health monitoring</li> <li>\ud83c\udfb6 Area-aware media routing</li> <li>\ud83d\udc1d Wasp-in-a-box logic</li> <li>\u23f1\ufe0f Presence hold switches</li> <li>\ud83d\udef0\ufe0f BLE tracker support</li> </ul> </li> </ul>"},{"location":"#documentation-structure","title":"\ud83d\udcd6 Documentation Structure","text":"<p>The docs are split into concepts, how-tos, and feature references so you can dive in depending on what you need:</p>"},{"location":"#concepts","title":"\ud83e\udde0 Concepts","text":"<p>Learn the key ideas that power Magic Areas:</p> <ul> <li>Presence Sensing</li> <li>Area States</li> <li>Meta-Areas</li> </ul>"},{"location":"#how-to-guides","title":"\ud83d\udee0\ufe0f How-To Guides","text":"<p>Step-by-step instructions to get started and troubleshoot:</p> <ul> <li>Installation</li> <li>Getting Started</li> <li>Implementation Ideas</li> <li>Troubleshooting</li> </ul>"},{"location":"#features","title":"\u26a1 Features","text":"<p>Detailed documentation for each feature.</p>"},{"location":"#next-steps","title":"\ud83d\ude80 Next Steps","text":"<ol> <li>Install Magic Areas via HACS or manually.</li> <li>Follow the Getting Started guide to set up your first areas.</li> <li>Explore the Features to unlock the full potential of your smart home.</li> </ol> <p>Need help?</p> <p>\ud83d\udcac Join the Magic Areas Discord or open an issue on GitHub.</p>"},{"location":"community/","title":"\ud83c\udf10 Magic Areas Community","text":"<p>Magic Areas isn\u2019t just an integration\u2014it\u2019s a growing community of enthusiasts, tinkerers, and developers! Whether you\u2019re looking to get help, contribute, or show off your projects, there\u2019s a place for you here.</p>"},{"location":"community/#join-us-on-discord","title":"\ud83d\udcac Join Us on Discord","text":"<p>Our Discord server is the hub for all Magic Areas discussion. It\u2019s the best place to:</p> <ul> <li>Ask questions or get help with configuration</li> <li>Share ideas and automation tips</li> <li>Stay up-to-date on new features and releases</li> </ul> <p>Everyone is welcome! From newcomers to advanced users, you\u2019ll find helpful and friendly folks ready to chat.</p>"},{"location":"community/#how-to-participate","title":"\ud83d\udee0\ufe0f How to Participate","text":"<p>There are many ways to contribute to Magic Areas:</p> <ol> <li>Development Help improve the integration by submitting pull requests or reporting bugs on GitHub.</li> <li>Testing Try out new releases, beta features, or experimental automations and provide feedback.</li> <li>Translation Help make Magic Areas accessible worldwide by contributing translations for documentation and the integration.</li> <li>Ideas &amp; Feedback Suggest new features, improvements, or share your automation setups. Every bit helps the community grow!</li> </ol>"},{"location":"community/#community-showcase","title":"\ud83c\udfa8 Community Showcase","text":"<p>We love seeing what the community builds with Magic Areas! Here are a few projects to inspire you:</p> <ul> <li>Linus Dashboard \u2013 a plug-and-play, auto-organized UI for Home Assistant that keeps itself tidy while you keep living your life. Plays nicely with meta-areas (Global / Interior / Exterior) and aggregates entities and provides a coherent structure out of the box for Magic Areas-centric homes.</li> </ul> <p>Got some Magic on you?</p> <p>\ud83d\ude80 Got a project to share that users or empowers Magic Areas? Let us know on Discord or submit it via GitHub, and we\u2019ll feature it here!</p> <p>Magic Areas is more than an integration\u2014it\u2019s a collaborative ecosystem. Join in, learn, contribute, and show off your creations!</p>"},{"location":"concepts/","title":"\ud83e\udde0 Concepts","text":"<p>Before diving into the features of Magic Areas, it\u2019s important to understand the core concepts. These lay the groundwork for how the integration works and why it\u2019s so powerful.</p> <p>Magic Areas extends Home Assistant\u2019s built-in Areas model with advanced logic and automation. It does this by sensing presence, calculating states, and even creating meta-areas that combine multiple rooms or zones.</p>"},{"location":"concepts/#presence-sensing","title":"\ud83d\udccd Presence Sensing","text":"<p>Presence sensing is at the heart of Magic Areas. By monitoring entities such as motion sensors, device trackers, and media players, Magic Areas determines if an area is occupied or clear.</p> <p>\u27a1\ufe0f Learn more: Presence Sensing</p>"},{"location":"concepts/#area-states","title":"\ud83c\udfe0 Area States","text":"<p>Beyond simple presence, Magic Areas tracks secondary states like <code>dark</code>, <code>sleep</code>, and <code>extended</code>. These states allow automations to adapt to context\u2014for example, using different lighting at night versus during the day.</p> <p>\u27a1\ufe0f Learn more: Area States</p>"},{"location":"concepts/#meta-areas","title":"\ud83c\udf0d Meta-Areas","text":"<p>Meta-Areas are virtual areas that represent collections of physical areas. Examples include:</p> <ul> <li>Interior (all indoor areas)</li> <li>Exterior (all outdoor areas)</li> <li>Floors (all rooms on a specific floor)</li> <li>Global (the entire home)</li> </ul> <p>Meta-areas unlock powerful whole-home automations such as turning off all lights, setting climate modes, or routing notifications.</p> <p>\u27a1\ufe0f Learn more: Meta-Areas</p> <p>\u2728 With these concepts in mind, you\u2019ll be ready to explore the full power of Magic Areas and start building smarter, more context-aware automations in your home.</p>"},{"location":"concepts/area-states/","title":"\ud83c\udfe0 Area States","text":"<p>Magic Areas\u2019 primary goal is to understand and track an area\u2019s presence state \u2014 that is, whether someone is currently there. But it doesn\u2019t stop there: Magic Areas also monitors a set of secondary states that enrich how automations behave in each area.</p>"},{"location":"concepts/area-states/#presence-state","title":"\ud83d\udfe2 Presence State","text":"<p>For each area you make it magic, Magic Areas does the following:</p> <ol> <li>Scans the area for all associated entities.</li> <li>Identifies which entities are valid presence sensors (see: Presence Sensing).</li> <li>Automatically creates a binary sensor entity:    <code>binary_sensor.area_{area_id}</code></li> </ol> <p>This sensor reflects the presence state of the area:</p> <ul> <li>When any presence entity enters a presence state (<code>on</code>, <code>home</code>, <code>playing</code>), the area is considered occupied (<code>on</code>).</li> <li>Once all presence entities leave those states, Magic Areas waits for a short delay (configured via <code>Clear Timeout</code>) before marking the area as clear (<code>off</code>).</li> </ul> <p>Note</p> <p>Magic Areas automatically listen for area changes on entities. Changing an entity's area will cause Magic Areas to reload.</p>"},{"location":"concepts/area-states/#secondary-states","title":"\ud83c\udf19 Secondary States","text":"<p>In addition to presence, Magic Areas tracks a set of secondary states that provide context about the area. These are based on specific configurable entities:</p> Secondary State Triggered by... <code>dark</code>/<code>bright</code> Area Light Sensor <code>sleep</code> Sleep Entity <code>accented</code> Accent Entity <code>extended</code> Automatically, after area stays occupied for longer than <code>Extended Time</code> seconds <p>Secondary states are optional but very useful \u2014 especially when layering automations or refining behavior per room.</p>"},{"location":"concepts/area-states/#how-secondary-states-are-used","title":"\ud83d\udca1 How Secondary States Are Used","text":"<p>Several Magic Areas features take advantage of these secondary states to fine-tune their behavior:</p> <ul> <li> <p>Light Groups   Use both presence and secondary states to determine which lights to turn on (e.g. only accent lighting when sleeping or dark).</p> </li> <li> <p>Climate Control   Can trigger presets based on state (e.g. only change temperature after an area has been <code>occupied</code> for a while \u2192 <code>extended</code>).</p> </li> <li> <p>Area-Aware Media Player   Filters notification playback based on secondary states, such as avoiding alerts in sleeping areas or playing TTS messages only when someone has been around for a while.</p> </li> </ul> <p>By layering presence with secondary states, Magic Areas gives you fine-grained, context-aware control over your automations \u2014 making each room react more intelligently to how it's being used.</p>"},{"location":"concepts/meta-areas/","title":"\ud83c\udf0d Meta-Areas","text":"<p>Meta-Areas are smart, virtual areas that group multiple regular areas together based on their type or location. Meta-areas are created and configured like any other Magic Area through the UI.</p> <p>They are perfect for creating higher-level automations that span entire sections of your home \u2014 like controlling all lights on a floor, or monitoring the overall air quality inside your house.</p>"},{"location":"concepts/meta-areas/#types-of-meta-areas","title":"\ud83c\udfd7\ufe0f Types of Meta-Areas","text":"<p>Magic Areas supports the following types of meta-areas:</p> Meta-Area Description <code>Interior</code> Groups all interior areas in your home <code>Exterior</code> Groups all exterior areas (e.g. garden, patio, garage) <code>Global</code> A top-level meta-area that includes all other areas <code>$FloorName</code> Groups all areas in a given floor"},{"location":"concepts/meta-areas/#features-compatible-with-meta-areas","title":"\u2699\ufe0f Features Compatible with Meta-Areas","text":"<p>Many Magic Areas features are fully compatible with meta-areas, allowing you to apply automations across broader zones of your home:</p> <ul> <li> <p>Light Groups   Control lighting for an entire floor or your whole house.</p> </li> <li> <p>Cover Groups   Manage all blinds or shades in grouped areas together.</p> </li> <li> <p>Climate Control   Control your HVAC based on state of entire floor or house.</p> </li> <li> <p>Media Player Groups   Control speakers or TVs across entire sections of your home.</p> </li> <li> <p>Aggregation   Collect sensor data (temperature, humidity, CO\u2082, etc.) across multiple areas and view them in a single, useful aggregate.</p> </li> <li> <p>Health Sensors   Monitor gas, smoke, leak, and other safety-related issues across an entire floor, interior/exterior, or globally.</p> </li> </ul> <p>Meta-Areas are powerful when used as part of a layered automation approach \u2014 where individual areas handle local actions, and meta-areas coordinate behaviors across your entire smart home.</p>"},{"location":"concepts/presence-sensing/","title":"\ud83d\udccd Concepts","text":"<p>Magic Areas works by detecting presence within an area and triggering state changes or automations accordingly. It does this by monitoring presence-related events from specific Home Assistant entity types and interpreting their states to determine whether an area is occupied or clear.</p>"},{"location":"concepts/presence-sensing/#supported-presence-sources","title":"\ud83d\udef0\ufe0f Supported Presence Sources","text":"<p>Magic Areas currently supports presence sensing from the following Home Assistant platforms:</p> <ul> <li><code>media_player</code> (and <code>remote</code>)</li> <li><code>binary_sensor</code></li> <li><code>device_tracker</code></li> </ul> <p>This may seem like a limited list, but it's intentional. Magic Areas relies on clear and predictable <code>states</code> and <code>device_class</code> values to automatically detect which entities can be used for presence sensing \u2014 with no manual configuration required in most cases.</p>"},{"location":"concepts/presence-sensing/#presence-logic-examples","title":"Presence logic examples:","text":"<ul> <li>If a <code>media_player</code> is playing in an area \u2192 the area is considered occupied.</li> <li>If a <code>device_tracker</code> entity (e.g., your desktop computer) is home \u2192 the area is occupied.</li> <li>If a <code>binary_sensor</code> for motion or presence is on \u2192 the area is occupied.</li> </ul>"},{"location":"concepts/presence-sensing/#default-presence-states","title":"\ud83e\udde0 Default Presence States","text":"<p>The following entity states are used by default to infer presence:</p> <ul> <li><code>on</code></li> <li><code>home</code></li> <li><code>playing</code></li> </ul>"},{"location":"concepts/presence-sensing/#default-binary_sensor-device-classes","title":"\ud83d\udce1 Default <code>binary_sensor</code> Device Classes","text":"<p>Magic Areas automatically uses the following <code>device_class</code> values for <code>binary_sensor</code> entities:</p> <ul> <li><code>motion</code></li> <li><code>occupancy</code></li> <li><code>presence</code></li> </ul> <p>These cover most sensors used for room occupancy detection.</p> <p>You can also extend this list in the UI if you use other sensors that make sense for your setup \u2014 for example, using a <code>door</code> sensor on a frequently used door like your garage entry.</p>"},{"location":"concepts/presence-sensing/#known-limitations","title":"\u26a0\ufe0f Known Limitations","text":"<p>Some Home Assistant entities \u2014 such as <code>switch</code> or general-purpose <code>sensor</code> \u2014 don\u2019t reliably convey presence information by default. However, you can easily work around this using Home Assistant\u2019s flexible templating tools.</p>"},{"location":"concepts/presence-sensing/#tips-for-custom-presence-detection","title":"\ud83d\udca1 Tips for Custom Presence Detection","text":"<p>You can create custom presence logic using these tools:</p> <ul> <li> <p>Template Binary Sensors   Use them to turn power or status sensors into binary <code>on</code>/<code>off</code> presence indicators.</p> </li> <li> <p>Switch as X   Useful for converting smart plugs into presence sensors by modeling them as something else.</p> </li> </ul>"},{"location":"concepts/presence-sensing/#example-use-cases","title":"\u2705 Example Use Cases:","text":"<ul> <li>Detect TV usage by monitoring power draw with a smart plug, then create a template binary sensor to represent presence.</li> <li>Use a door contact sensor (<code>device_class: door</code>) to indicate occupancy when a specific door opens.</li> <li>Combine with external solutions like Bermuda, ESPresence and Room Assistant to use Bluetooth-based room tracking.</li> </ul> <p>With the right combination of sensors and logic, Magic Areas can reliably detect presence in every corner of your home \u2014 even in edge cases!</p>"},{"location":"features/","title":"\u2728 Feature List","text":"<p>Magic Areas can do a lot more than presence sensing! Below is a list of built-in features grouped by category.</p>"},{"location":"features/#smart-groups","title":"\ud83e\udde0 Smart Groups","text":"<p>Entities grouped with presence-aware automation logic.</p> <ul> <li> <p>\ud83d\udca1 Light Groups   Automatically controls lights per area using presence, darkness, sleep, and more.</p> </li> <li> <p>\ud83c\udf00 Fan Groups   Dynamically manages fans in each area based on presence and occupancy. Includes support for multi-speed fans.</p> </li> <li> <p>\ud83c\udf21\ufe0f Climate Groups   Automatically control climate devices and maps area states to climate presets.</p> </li> </ul>"},{"location":"features/#simple-groups","title":"\ud83e\uddf1 Simple Groups","text":"<p>Passive entity grouping for easier control.</p> <ul> <li> <p>\ud83e\ude9f Cover Groups   Groups all <code>cover</code> entities (e.g. blinds, shades, garage doors) using <code>cover.group</code>.</p> </li> <li> <p>\ud83d\udcfa Media Player Groups   Groups all <code>media_player</code> entities using <code>media_player.group</code>.</p> </li> </ul>"},{"location":"features/#sensor-features","title":"\ud83d\udcca Sensor Features","text":"<p>Sensor logic, tracking, and hazard detection.</p> <ul> <li> <p>\ud83d\udccd BLE Tracker Sensors   Adds support for BLE presence sensors (e.g., Bermuda, ESPresence, Room Assistant). Automatically maps tracked devices to areas.</p> </li> <li> <p>\ud83d\udcca Aggregation   Creates aggregate <code>sensor</code> or <code>binary_sensor</code> for supported device classes (e.g., temperature, humidity, occupancy).</p> </li> <li> <p>\ud83d\udea8 Health Sensor   Creates a binary sensor per area to represent health problems (e.g., leaks, smoke, gas).</p> </li> <li> <p>\ud83d\udc1d Wasp in a Box   Adds intelligent presence logic using motion + door sensors to infer room occupancy even when closed.</p> </li> </ul>"},{"location":"features/#notifications","title":"\ud83d\udd0a Notifications","text":"<ul> <li>\ud83d\udd09 Area-Aware Media Player   A smart proxy <code>media_player</code> that plays TTS only in occupied areas. Great for room-aware voice alerts.</li> </ul>"},{"location":"features/#overrides","title":"\u270b Overrides","text":"<ul> <li>\u23f8\ufe0f Presence Hold   Adds a manual <code>switch</code> to override presence state to <code>occupied</code>, with optional auto-reset timer.</li> </ul>"},{"location":"features/aggregation/","title":"Aggregation","text":"<p>This feature creates aggregates for all <code>sensor</code> and <code>binary_sensor</code> in a given area according to their <code>device_class</code> and <code>unit_of_measurement</code> tuple.</p> <p>Note</p> <p>The entities are created with the following template <code>(binary_?)sensor.magic_areas_aggregates_{area}_aggregate_{device_class}</code>. An <code>_{unit_of_measurement}</code> suffix will be added if there are more than one <code>unit_of_measurement</code> for the same <code>device_class</code>.</p> <p>The feature has an <code>Aggregate Min Entities</code> parameter (defaulted to <code>2</code>) which will only create aggregate entities if the entity count for a given tuple is greater than this number. If you want aggregates to be always created, set this value to <code>1</code>.</p> <p>This feature requires <code>unit_of_measurement</code> to be set for all entities to be aggregated</p>"},{"location":"features/aggregation/#aggregation-methods","title":"\ud83d\udcca Aggregation methods","text":"<ul> <li>Binary Sensor: If one of the entities is <code>on</code>, then the aggregate is <code>on</code>. Aggregate will be <code>off</code> if all entities are <code>off</code>.</li> <li>Sensor: All values will be mean averages, except for <code>power</code>, <code>current</code> and <code>energy</code> which will be sums.</li> </ul>"},{"location":"features/aggregation/#example-use-cases","title":"Example use cases","text":""},{"location":"features/aggregation/#temperature-management","title":"\ud83d\udd25 Temperature management","text":"<p>Instead of referencing individual temperature sensors in each room, use <code>sensor.magic_areas_aggregates_{area}_aggregate_temperature</code> to get the average temperature of an entire area. This is especially useful in:</p> <ul> <li>Automating climate systems based on a whole area's average temperature</li> <li>Comparing average temperatures across floors or wings of a building</li> </ul>"},{"location":"features/aggregation/#air-quality-ventilation","title":"\ud83d\udca8 Air quality &amp; ventilation","text":"<p>Aggregate <code>co2</code>, <code>humidity</code>, or <code>voc</code> levels into one sensor like <code>sensor.magic_areas_aggregates_{area}_aggregate_humidity</code> to:</p> <ul> <li>Trigger fans or dehumidifiers when humidity is too high</li> <li>Monitor and act on air quality trends over time without manually aggregating data</li> </ul>"},{"location":"features/aggregation/#power-monitoring","title":"\u26a1 Power monitoring","text":"<p>Use <code>sensor.magic_areas_aggregates_{area}_aggregate_power</code> to monitor combined power consumption for all devices in an area:</p> <ul> <li>Automatically turn off non-essential devices when usage spikes</li> <li>Create dashboards that show power consumption per area (e.g., Kitchen vs. Living Room)</li> </ul>"},{"location":"features/aggregation/#simplified-automations","title":"\ud83e\udde0 Simplified automations","text":"<p>Using aggregates makes automation logic cleaner and more resilient:</p> <pre><code>- alias: Turn off humidifier when area unoccupied\n  trigger:\n    - platform: state\n      entity_id: binary_sensor.magic_areas_presence_tracking_bedroom_area_state\n      to: \"off\"\n      for: \"5m\"\n  action:\n    - service: humidifier.turn_off\n      target:\n        entity_id: humidifier.bedroom_humidifier\n</code></pre> <p>Instead of checking multiple sensors individually, you just check the aggregate.</p>"},{"location":"features/area-aware-media-player/","title":"Area-Aware Media Player","text":"<p>The Area-Aware Media Player \ud83c\udfe0 is a virtual <code>media_player</code> entity that automatically routes <code>play_media</code> actions to actual <code>media_player</code> devices in occupied areas only.</p> <p>This is especially useful for:</p> <ul> <li>\ud83d\udce2 TTS notifications (Text-to-Speech)</li> <li>\ud83d\udd14 Context-aware alerts</li> <li>\ud83e\uddd8 Preventing disruptions in quiet or empty rooms</li> </ul> <p>Instead of broadcasting audio throughout your home, this feature ensures messages are only played where someone is present.</p> <p>Tip</p> <p>Works great with Home Assistant Alerts and other notification automations.</p>"},{"location":"features/area-aware-media-player/#configuration-options","title":"\ud83c\udf9b\ufe0f Configuration Options","text":"<p>Warning</p> <p>This feature must be enabled per area. If an area has it disabled, it will not participate in media routing\u2014even if it's occupied.</p>"},{"location":"features/area-aware-media-player/#notification-devices","title":"\ud83d\udd0a Notification Devices","text":"<p>Select which <code>media_player</code> entities in an area will be used for playback.</p> <ul> <li>Leave blank to include all media players in the area (default)</li> <li>Or choose specific ones (e.g., only cast devices or smart speakers)</li> </ul>"},{"location":"features/area-aware-media-player/#notify-states","title":"\ud83d\udd52 Notify States","text":"<p>Define which area states allow notifications to be played in that area.</p> <ul> <li>Default: <code>extended</code>   (Only plays in areas that have been occupied for a while)</li> <li>You may include any of the following:</li> <li><code>occupied</code></li> <li><code>accented</code></li> <li><code>extended</code></li> <li><code>sleep</code> (use with caution)</li> <li>Or any custom-defined secondary state</li> </ul> <p>\ud83d\udca1 Use <code>occupied</code> for immediate feedback, or restrict to <code>extended</code> for less frequent areas like bedrooms.</p>"},{"location":"features/area-aware-media-player/#how-it-works","title":"\ud83d\ude80 How It Works","text":"<p>When you send a <code>play_media</code> command to <code>media_player.magic_areas_area_aware_media_player_global</code>, Magic Areas will:</p> <ol> <li>Check each area to see if it's eligible (feature enabled, state allowed, devices available)</li> <li>Send the media to all appropriate devices in those areas</li> </ol>"},{"location":"features/area-aware-media-player/#playback-rules","title":"\u2705 Playback Rules","text":"<ul> <li>Only occupied areas matching the configured states will receive audio</li> <li>Media is duplicated across multiple areas if more than one qualifies</li> <li>No playback occurs in sleeping, empty, or excluded areas</li> </ul>"},{"location":"features/area-aware-media-player/#example-tts-notification","title":"\ud83d\udce3 Example: TTS Notification","text":"<pre><code>service: media_player.play_media\ntarget:\n  entity_id: media_player.magic_areas_area_aware_media_player_global\ndata:\n  media_content_type: \"music\"\n  media_content_id: \"media-source://tts/google_translate?message=The+garage+door+was+left+open\"\n</code></pre> <p>This will play the message only in occupied areas using configured media players.</p>"},{"location":"features/area-aware-media-player/#example-notify-tts-integration","title":"\ud83d\udde3\ufe0f Example: Notify TTS Integration","text":"<p>You can use this feature as a TTS notification target by configuring a <code>notify</code> service in your <code>configuration.yaml</code>:</p> <pre><code>notify:\n  - platform: tts\n    name: area_aware_notify\n    entity_id: tts.piper\n    media_player: media_player.magic_areas_area_aware_media_player_global\n</code></pre> <p>Then you can use it in your automations like this:</p> <pre><code>service: notify.area_aware_notify\ndata:\n  message: \"There's a problem in the laundry room.\"\n</code></pre> <p>This will speak the message only where people are present.</p>"},{"location":"features/area-aware-media-player/#related","title":"\ud83d\udd17 Related","text":"<ul> <li>See Area Health for how you can combine this with intelligent alerting.</li> <li>Read more about TTS notifications.</li> </ul>"},{"location":"features/ble-tracker-monitor/","title":"Bluetooth &amp; Bluetooth LE (BLE) Tracker Monitor","text":"<p>The BLE Tracker Monitor feature streamlines presence detection using text-based BLE sensors, such as those from Bermuda, ESPresence, or Room Assistant.</p>"},{"location":"features/ble-tracker-monitor/#why-use-it","title":"\ud83d\udccd Why use it?","text":"<p>Normally, you\u2019d need to manually create multiple template binary sensors\u2014one per area\u2014to convert each tracker\u2019s text state (e.g., <code>kitchen</code>, <code>bedroom</code>) into a usable <code>on</code>/<code>off</code> signal for presence detection.</p> <p>Magic Areas eliminates this hassle by doing it automatically.</p>"},{"location":"features/ble-tracker-monitor/#how-it-works","title":"\u2699\ufe0f How it works","text":"<p>When you reference a BLE tracker sensor in the area config, Magic Areas will:</p> <ul> <li>Automatically create a binary presence sensor.</li> <li>Track its state by checking whether it matches:</li> <li>the area name</li> <li>the area ID</li> <li>the area slug   (All compared in lowercase)</li> </ul> <p>If there's a match, the area will be considered <code>occupied</code>.</p> <p>This allows Magic Areas to use the tracker directly for presence detection, without needing custom templates.</p> <p>\u2705 Any text-based sensor that reports an area name, ID, or slug can be used with this feature\u2014not just BLE trackers.</p>"},{"location":"features/ble-tracker-monitor/#compatibility","title":"\ud83e\udde0 Compatibility","text":"<p>This feature is known to work with:</p> <ul> <li>Bermuda \u2705</li> <li>ESPresence \u26a0\ufe0f (dependent on consistent naming)</li> <li>Room Assistant \u26a0\ufe0f (untested, but should work)</li> </ul> <p>\ud83d\udcac Have another system that reports presence as area names or IDs? It\u2019ll likely work too.</p>"},{"location":"features/ble-tracker-monitor/#flappy-sensors-read-this","title":"\u26a0\ufe0f Flappy Sensors? Read This","text":"<p>Warning</p> <p>BLE trackers can be flappy\u2014reporting incorrect or outdated values momentarily. To prevent incorrect <code>clear</code> states, it\u2019s highly recommended to add them to the \"keep only sensors\" list in your area config.</p> <p>This ensures their presence signal is only added to detection logic and not used as the sole decider.</p>"},{"location":"features/ble-tracker-monitor/#example-use-case","title":"\ud83d\udca1 Example Use Case","text":"<p>Let\u2019s say your Bermuda tracker reports <code>\"living_room\"</code> when it detects a person in the Living Room.</p> <p>Magic Areas will:</p> <ul> <li>Detect that <code>living_room</code> matches the area's slug</li> <li>Set the Living Room area to <code>occupied</code></li> <li>No template sensors needed!</li> </ul>"},{"location":"features/climate-control/","title":"Climate Control","text":"<p>Climate control allows you to map area states to climate device presets.</p> <p>When configuring Climate Control, you will first be asked to select a climate device which Magic Areas will then pull the available presets for mapping in the next screen.</p> <p>Tip</p> <p>\ud83e\udde0 Climate control is best used in meta-areas such as Interior or Floor-meta areas. Meta-areas\u2019 secondary states (such as sleep \ud83d\udecc) are calculated from child areas. Secondary state calculation method for meta-areas is available in the UI.</p>"},{"location":"features/climate-control/#how-it-works","title":"\u2699\ufe0f How it works","text":"<p>Pretty simple: when the state changes (either primary [<code>occupied</code>/<code>clear</code>] or secondary [<code>sleep</code> / <code>dark</code> / <code>extended</code>]), the configured climate device will be set to the mapped preset.</p> <p>Warning</p> <p>If you leave a preset mapping blank, climate control will not change any presets. This is useful if you don\u2019t want climate preset to change immediately, but only after being occupied for an <code>extended</code> time \u23f3.</p>"},{"location":"features/climate-control/#usage-examples","title":"\ud83e\udde0 Usage Examples","text":""},{"location":"features/climate-control/#lower-temperature-at-night","title":"\ud83d\udecc Lower temperature at night","text":"<p>Map the <code>sleep</code> state to a cooler preset like <code>sleep</code> or <code>eco</code>.</p> <ul> <li>Why: Many people sleep better at lower temperatures.</li> <li>How: When the meta-area enters the <code>sleep</code> state, Magic Areas sets the climate to your <code>sleep</code> preset automatically.</li> </ul>"},{"location":"features/climate-control/#resume-comfort-in-the-morning","title":"\ud83c\udf05 Resume comfort in the morning","text":"<p>Map the <code>occupied</code> state to a <code>home</code> or <code>comfort</code> preset.</p> <ul> <li>Why: As the home becomes active in the morning, you want a warmer or cooler preset for comfort.</li> <li>How: As soon as presence is detected (i.e., <code>occupied</code>), Magic Areas switches the climate back to the desired preset.</li> </ul>"},{"location":"features/climate-control/#delay-climate-change-until-extended-occupancy","title":"\u23f3 Delay climate change until extended occupancy","text":"<p>Leave the <code>occupied</code> state preset blank, but set a preset for <code>extended</code>.</p> <ul> <li>Why: Avoid premature heating/cooling for brief visits in areas like a study or guest room.</li> <li>How: The preset only changes after the area has been occupied for an extended period.</li> </ul>"},{"location":"features/climate-control/#reduce-energy-use-when-no-ones-home","title":"\ud83c\udf07 Reduce energy use when no one\u2019s home","text":"<p>Map the <code>clear</code> state to an energy-saving preset like <code>away</code> or <code>eco</code>.</p> <ul> <li>Why: No one's home, no need to run HVAC at full blast.</li> <li>How: When the entire meta-area becomes <code>clear</code>, Magic Areas switches the climate system to a lower-energy mode.</li> </ul>"},{"location":"features/climate-control/#floor-level-climate-control","title":"\ud83c\udfe0 Floor-level climate control","text":"<p>Use climate control on a <code>floor</code> meta-area instead of per-room.</p> <ul> <li>Why: Helps prevent conflicting presets if individual rooms are occupied while the floor as a whole is still considered <code>clear</code>.</li> <li>How: Configure the floor-level meta-area to manage the climate device, using secondary states calculated from child rooms.</li> </ul> <p>Warning</p> <p>\u2705 Make sure your climate devices support the required presets (<code>home</code>, <code>away</code>, <code>eco</code>, <code>sleep</code>, etc.), or customize them according to your climate integration.</p>"},{"location":"features/cover-groups/","title":"Cover Groups","text":"<p>The Cover Groups \ud83d\udeaa feature automatically creates a cover group in Home Assistant for each area, grouping all the <code>cover</code> entities assigned to that area.</p> <p>Warning</p> <p>\u26a0\ufe0f If an area has no <code>cover</code> entities, no group will be created.</p> <p>This makes it easier to control multiple covers\u2014such as blinds, shutters, or garage doors\u2014in a single area using just one entity.</p>"},{"location":"features/cover-groups/#example-automations","title":"\ud83d\udee0\ufe0f Example Automations","text":""},{"location":"features/cover-groups/#open-all-window-shades-in-the-morning","title":"\ud83d\udd06 Open all window shades in the morning","text":"<pre><code>alias: Open All Shades at Sunrise\ntrigger:\n  - platform: sun\n    event: sunrise\naction:\n  - service: cover.open_cover\n    target:\n      entity_id:\n        - cover.living_room\n        - cover.bedroom\n        - cover.kitchen\nmode: single\n</code></pre> <p>Each <code>cover.</code> entity here refers to the automatically created area group, such as <code>cover.living_room</code> if your living room has covers. The actual <code>entity_id</code> generated by Magic Areas are much larger to prevent conflicts. You can find the specific <code>entity_id</code> via the UI on the entity's properties.</p>"},{"location":"features/cover-groups/#close-all-garage-doors-at-night","title":"\ud83d\ude98 Close all garage doors at night","text":"<pre><code>alias: Close All Garage Doors at Night\ntrigger:\n  - platform: time\n    at: \"22:00:00\"\naction:\n  - service: cover.close_cover\n    target:\n      entity_id:\n        - cover.garage\n        - cover.workshop\nmode: single\n</code></pre> <p>Helpful for ensuring all covers tagged as garage doors are closed before bed or when leaving the house.</p>"},{"location":"features/fan-groups/","title":"Fan Groups","text":"<p>Fan Groups work similarly to a simpler version of the Generic Thermostat. This feature groups all fans within an area\u2014whether you have one or many\u2014and allows you to monitor an [[aggregate sensor|Aggregation]] of a selected <code>device_class</code> such as <code>temperature</code> \ud83c\udf21\ufe0f, <code>humidity</code> \ud83d\udca7, or <code>co2</code> \ud83e\udec1.</p> <p>The fans will automatically turn <code>on</code> \ud83d\udd1b when the tracked sensor\u2019s value rises above a configured <code>setpoint</code>, and turn <code>off</code> \ud83d\udd18 when it falls below.</p>"},{"location":"features/fan-groups/#use-cases","title":"\ud83d\udee0\ufe0f Use Cases","text":"<ul> <li>Turning fans on when it\u2019s too hot \ud83d\udd25</li> <li>Activating bathroom exhaust fans when humidity is too high \ud83d\udca6</li> <li>Turning on ventilation fans if CO2 levels become elevated \ud83c\udfed</li> </ul>"},{"location":"features/health-sensor/","title":"Area Health Sensor","text":"<p>The Area Health feature monitors the safety and integrity of an area by aggregating signals from critical sensor types\u2014alerting you when something might be wrong.</p> <p>These sensors work similarly to [[aggregate|Aggregation]] binary sensors but specifically target key health-related device classes.</p>"},{"location":"features/health-sensor/#what-it-tracks","title":"\ud83e\ude7a What it tracks","text":"<p>The Area Health feature combines the following <code>binary_sensor.device_class</code> types into a single <code>binary_sensor.magic_areas_health_$area_health_problem</code> entity:</p> <ul> <li><code>gas</code> \u2013 Detects gas leaks (e.g., natural gas, propane)</li> <li><code>smoke</code> \u2013 Detects smoke or fire</li> <li><code>moisture</code> \u2013 Detects water leaks</li> <li><code>problem</code> \u2013 Generic problem indicators (e.g., device errors)</li> <li><code>safety</code> \u2013 General safety-related sensors</li> </ul> <p>Failure</p> <p>If you use the <code>moisture</code> device class for non-leak purposes, make sure to exclude those sensors manually to avoid false alarms.</p> <p>These aggregated sensors are available per-area and supported in meta-areas like <code>Interior</code>, <code>Exterior</code>, or <code>Global</code>, giving you a comprehensive view of your home's status.</p>"},{"location":"features/health-sensor/#sample-use-case-notifications","title":"\ud83d\udd14 Sample Use Case: Notifications","text":"<p>Use the Area Health sensor to trigger automations that notify you if a problem is detected anywhere in your home.</p>"},{"location":"features/health-sensor/#sample-automation","title":"\ud83d\udee0\ufe0f Sample Automation","text":"<pre><code>alias: Notify on degraded area health\ndescription: \"\"\ntriggers:\n  - platform: state\n    entity_id: binary_sensor.magic_areas_health_global_health_problem\n    from: \"off\"\n    to: \"on\"\n  - platform: time_pattern\n    hours: \"/1\"\nconditions:\n  - condition: state\n    entity_id: binary_sensor.magic_areas_health_global_health_problem\n    state: \"on\"\nactions:\n  - service: notify.residents_mobile_app\n    data:\n      title: Area Issue!\n      message: &gt;-\n        {% for m_entity in state_attr('binary_sensor.magic_areas_health_global_health_problem', 'entity_id') %}\n        {%- if 'health_problem' not in m_entity or not is_state(m_entity, 'on') %}{% continue %}{% endif -%}\n        {% set entities = state_attr(m_entity, 'entity_id') -%}\n        {% if entities %}\n        {{ state_attr(m_entity, 'friendly_name')|replace(' Area Health','') }}\n        {%- for entity in entities %}\n        {%- if is_state(entity, 'on') %}\n        - {{ state_attr(entity, 'friendly_name') }}\n        {% endif %}\n        {% endfor %}\n        {% endif %}\n        {% endfor %}\nmode: single\n</code></pre> <p>This automation:</p> <ul> <li>Sends a notification whenever a health issue is detected globally.</li> <li>Continues sending hourly reminders while the issue is unresolved.</li> <li>Lists each affected area and the specific triggered sensors in the message.</li> </ul> <p>Tip</p> <p>\ud83d\udde3\ufe0f If you\u2019re using TTS notification service tied to an Area-Aware Media Player, you can add a <code>tts.notify_area_aware</code> service call in the <code>actions</code> block to speak the warning aloud in the appropriate area.</p>"},{"location":"features/health-sensor/#why-use-area-health","title":"\ud83d\udca1 Why use Area Health?","text":"<ul> <li>Get real-time alerts for important safety issues.</li> <li>Avoid manually checking dozens of sensors\u2014let Magic Areas watch them for you.</li> <li>Build automations that respond to area-level issues, not just individual devices.</li> </ul> <p>Tip</p> <p>You can use individual area health sensors for room-level automations, or use meta-areas (like <code>Interior</code>) for whole-home monitoring.</p>"},{"location":"features/light-groups/","title":"Light Groups","text":"<p>The Light Groups feature in Magic Areas helps you organize and automate your lights more intelligently and contextually\u2014starting with automatic light group creation and adding rich, state-aware behavior for smarter automation.</p>"},{"location":"features/light-groups/#basic-functionality","title":"\u2705 Basic Functionality","text":"<p>At its simplest, this feature automatically creates a Home Assistant light group for each area using all <code>light</code> entities assigned to it.</p> <p>Warning</p> <p>No group will be created if there are no <code>light</code> entities in the area.</p>"},{"location":"features/light-groups/#secondary-light-groups","title":"\ud83c\udf08 Secondary Light Groups","text":"<p>You can further classify your lights into secondary groups with specific purposes:</p> <ul> <li>Overhead Lights \u2013 Main ceiling lights for general illumination.</li> <li>Accent Lights \u2013 Decorative or highlight lighting (e.g., under cabinets, wall sconces).</li> <li>Task Lights \u2013 Focused lights for workspaces, desks, or reading.</li> <li>Sleep Lights \u2013 Dim lighting suitable for nighttime or bedtime use.</li> </ul> <p>Each of these groups\u2014when populated\u2014will automatically have their own dedicated <code>light</code> group created in Home Assistant.</p> <p>These groups can also be linked to an area's secondary states (e.g., <code>sleep</code>, <code>accented</code>, <code>extended</code>) for smarter automation based on context.</p> <p>Warning</p> <p>\ud83e\udde0 To enable automation, turn on the <code>Light Control ($Area)</code> switch entity that Magic Areas creates for each instance.</p>"},{"location":"features/light-groups/#automatic-control","title":"\ud83d\udd01 Automatic Control","text":"<p>Magic Areas can automatically turn lights on or off based on:</p> <ul> <li>The area's primary presence state: <code>occupied</code> or <code>clear</code></li> <li>The area's secondary states: <code>dark</code>, <code>extended</code>, <code>sleep</code>, etc.</li> </ul>"},{"location":"features/light-groups/#the-dark-state","title":"\ud83c\udf12 The <code>dark</code> State","text":"<p>If you've configured a <code>dark</code> sensor for the area, lights will only turn on when the area is both occupied and dark. Otherwise, lights will turn on anytime the area becomes occupied.</p> <p>Note</p> <p>\u2705 If the area becomes dark while already occupied, lights will turn on immediately.</p>"},{"location":"features/light-groups/#dark-state-behavior-matrix","title":"Dark State Behavior Matrix","text":"Area State Is <code>dark</code> configured? Dark State Lights will... <code>occupied</code> \u274c No N/A Turn on <code>occupied</code> \u2705 Yes <code>off</code> Do nothing <code>occupied</code> \u2705 Yes <code>on</code> Turn on <code>clear</code> \u274c No N/A Turn off <code>clear</code> \u2705 Yes <code>off</code> Turn off <code>clear</code> \u2705 Yes <code>on</code> Turn off"},{"location":"features/light-groups/#automatically-turning-off-lights","title":"\ud83d\udca1 Automatically Turning Off Lights","text":"<p>When an area becomes <code>clear</code>, all lights are turned off, regardless of secondary state. If you want to prevent this, you can disable Automatic Control for the area.</p>"},{"location":"features/light-groups/#advanced-secondary-light-group-control","title":"\ud83e\udde9 Advanced: Secondary Light Group Control","text":"<p>Secondary light groups can be tied to specific area states (primary or secondary). A group will only turn on if the area is currently in one of the selected states.</p>"},{"location":"features/light-groups/#define-triggering-states-for-each-group","title":"\ud83d\udd18 Define Triggering States for Each Group","text":"<p>Each light group can be associated with one or more states that should trigger it. These may include:</p> <ul> <li><code>occupied</code> (default)</li> <li><code>sleep</code></li> <li><code>extended</code></li> <li><code>accented</code></li> <li>Or any other defined secondary state</li> </ul> <p>Warning</p> <p>\u2757Light group categories (Overhead, Accent, Task, Sleep) are not automatically mapped to states. For example, a \"Sleep Light\" does not turn on automatically during the <code>sleep</code> state unless you explicitly configure it to do so.</p> <p>\ud83d\udca1 If you want a light group to remain active across multiple states (e.g., <code>occupied</code> and <code>extended</code>), make sure to select all relevant states.</p>"},{"location":"features/light-groups/#when-should-the-light-group-react","title":"\ud83d\udd04 When Should the Light Group React?","text":"<p>You can specify when a light group should respond to area state changes:</p> <ul> <li><code>occupancy</code> \u2013 The group only activates when the area transitions from <code>clear</code> to <code>occupied</code>.</li> <li><code>state</code> \u2013 The group reacts to changes in the specific secondary state (e.g., whenever the <code>sleep</code> state is entered or exited).</li> </ul> <p>For example: - You might want <code>sleep</code> lights to turn on only when first entering the room (<code>occupancy</code>). - You might want <code>accent</code> lights to respond whenever the state changes (<code>state</code>).</p>"},{"location":"features/light-groups/#usage-examples","title":"\ud83e\udde0 Usage Examples","text":""},{"location":"features/light-groups/#evening-ambiance-with-accent-lights","title":"\ud83d\udecb\ufe0f Evening ambiance with accent lights","text":"<p>Configure your <code>Accent Lights</code> group to turn on during the <code>extended</code> state in the living room.</p> <ul> <li>Why: You want soft lighting during movie nights or relaxing evenings.</li> <li>How: Tie the <code>accent</code> group to the <code>extended</code> state using <code>state</code> trigger mode.</li> </ul>"},{"location":"features/light-groups/#nighttime-routine-in-bedrooms","title":"\ud83d\udca4 Nighttime routine in bedrooms","text":"<p>Use <code>Sleep Lights</code> tied to the <code>sleep</code> state and set to activate only via <code>occupancy</code>.</p> <ul> <li>Why: You want dim lights to turn on when someone enters a room at night.</li> <li>How: Map <code>sleep</code> lights to the <code>sleep</code> state and trigger them only on <code>occupancy</code> so they don\u2019t toggle unnecessarily.</li> </ul>"},{"location":"features/light-groups/#focus-lighting-for-work-areas","title":"\ud83d\udcbc Focus lighting for work areas","text":"<p>Assign <code>Task Lights</code> in your home office to respond to the <code>occupied</code> state.</p> <ul> <li>Why: When someone enters the office, the desk lamp should turn on automatically.</li> <li>How: Link the <code>task</code> group to the <code>occupied</code> state using either <code>occupancy</code> or <code>state</code> depending on behavior preference.</li> </ul>"},{"location":"features/light-groups/#cleaning-mode-lighting","title":"\ud83e\uddf9 Cleaning mode lighting","text":"<p>Tie all <code>Overhead Lights</code> in a floor meta-area to the <code>cleaning</code> state (if configured).</p> <ul> <li>Why: Maximize brightness when cleaning is underway.</li> <li>How: Map <code>overhead</code> lights to the <code>cleaning</code> state using <code>state</code> mode for immediate reaction.</li> </ul>"},{"location":"features/light-groups/#brightness-and-color-temperature","title":"\ud83c\udf9a\ufe0f Brightness and Color Temperature","text":"<p>Magic Areas does not control brightness or color temperature of lights.</p> <p>This is by design, and you are encouraged to use existing integrations like:</p> <ul> <li>Adaptive Lighting</li> <li>Circadian Lighting</li> </ul> <p>These handle brightness and temperature more effectively and are fully compatible with Magic Areas.</p>"},{"location":"features/media-player-groups/","title":"Media Player Groups","text":"<p>This feature automatically creates media player groups for an area with all the <code>media_player</code> entities for that area.</p> <p>Warning</p> <p>This feature will not create a group if there are no <code>media_player</code> entities in the area.</p>"},{"location":"features/presence-hold/","title":"Presence Hold","text":"<p>The Presence Hold \ud83d\udd12 feature creates a dedicated switch for an area that acts as a manual override presence sensor.</p> <p>This allows you to force the area\u2019s presence state to <code>occupied</code> by toggling the switch on, regardless of other presence detections.</p>"},{"location":"features/presence-hold/#timeout-option","title":"\u23f3 Timeout Option","text":"<p>You can configure an optional timeout (in seconds) after which the switch will automatically turn <code>off</code>, releasing the override and allowing presence detection to resume normally.</p>"},{"location":"features/presence-hold/#use-cases","title":"Use Cases","text":"<ul> <li>Manually mark a room as occupied even if presence sensors don\u2019t detect anyone (e.g., pets, guests)</li> <li>Keep an area \u201coccupied\u201d temporarily for testing automations or events</li> <li>Override presence during unusual circumstances like maintenance or cleaning</li> </ul>"},{"location":"features/presence-hold/#how-it-works","title":"How It Works","text":"<ul> <li>Turning the Presence Hold switch <code>on</code> forces the area presence to <code>occupied</code></li> <li>When <code>off</code>, presence detection behaves normally based on configured sensors and logic</li> <li>If a <code>timeout</code> is set, the switch automatically turns off after the timeout period</li> </ul> <p>Simple and powerful, Presence Hold gives you manual control over presence states whenever you need it.</p>"},{"location":"features/wasp-in-a-box/","title":"Wasp-in-a-Box Sensor","text":"<p>The Wasp in a Box \ud83d\udc1d\ud83d\udce6 feature improves presence detection by adding contextual logic to motion-based sensors using an associated door or entry sensor.</p> <p>It\u2019s based on a simple concept:</p>"},{"location":"features/wasp-in-a-box/#how-it-works","title":"\ud83e\udde0 How It Works","text":"<ol> <li>If we see a wasp, there is a wasp in the box.</li> <li>If we close the box while the wasp is inside, the wasp stays inside.</li> <li>If the box remains closed and the wasp stops moving, we assume it's still inside.</li> <li>If the box is opened again and the wasp isn\u2019t moving, we assume it\u2019s gone.</li> </ol> <p>\ud83e\uddea This helps avoid false clears due to motion sensors timing out after you\u2019ve already left the room\u2014preserving presence state more accurately.</p> <p>When enabled, Magic Areas will:</p> <ul> <li>Create a <code>binary_sensor</code> for each area using this logic.</li> <li>Automatically use it for presence tracking (replacing or supplementing your regular motion sensors).</li> <li>Use the area\u2019s aggregated wasp and box sensors (see below).</li> </ul>"},{"location":"features/wasp-in-a-box/#delay-behavior","title":"\u23f1\ufe0f Delay Behavior","text":"<p>Wasp in a Box forces the sensor off during a \"box event\" (i.e., door/garage opens or closes), and only checks for wasps after a configurable <code>delay</code>.</p> <p>This ensures:</p> <ul> <li>When leaving a room (motion still <code>on</code>, door opens), we wait before checking motion again, in case the door is closed before the motion sensor clears. (e.g. bathrooms)</li> <li>When entering and closing the door, we must trigger motion again after the delay to confirm occupancy.</li> </ul> <p>\u2705 This avoids premature <code>clear</code> and deadlock (motion sensor still on when you leave the room and close the door behind you) states and provides more reliable presence when entering or exiting enclosed rooms.</p> <p>Warning</p> <p>To tune the delay, trigger your motion sensor and immediately leave, see how long it takes to clear. Repeat this test multiple times and average out the results. Add a few seconds to be safe.</p>"},{"location":"features/wasp-in-a-box/#wasp-timeout","title":"\u23f3 Wasp Timeout","text":"<p>Motion sensors might flicker when doors are closed, causing a false-positive deadlock. Setting a Wasp timeout will force the wasp out of the box after a period (configurable) of inactivity.</p>"},{"location":"features/wasp-in-a-box/#sensor-types-used","title":"\ud83d\udce6 Sensor Types Used","text":""},{"location":"features/wasp-in-a-box/#wasp-sensors-configurable","title":"Wasp Sensors \ud83d\udc1d (Configurable)","text":"<p>These indicate movement inside the area:</p> <ul> <li><code>motion</code> (default)</li> <li><code>occupancy</code></li> <li><code>presence</code></li> </ul> <p>You can configure which device classes to treat as wasps.</p>"},{"location":"features/wasp-in-a-box/#box-sensors-auto-detected","title":"Box Sensors \ud83d\udce6 (Auto-detected)","text":"<p>These indicate entry/exit points (the \"box\"):</p> <ul> <li><code>door</code></li> <li><code>garage_door</code></li> </ul> <p>These are automatically detected during setup \u2014 no configuration needed.</p> <p>Failure</p> <p>If you have doors you use for presence sensing that are not room access doors (e.g. cabinet doors, fridge doors), those will not work with Wasp in a Box. Exclude this doors from the area and create template sensors of device class <code>presence</code> based on their state, then add those template sensors to the area.</p>"},{"location":"features/wasp-in-a-box/#presence-integration","title":"\u2705 Presence Integration","text":"<p>Once enabled, Magic Areas will:</p> <ul> <li>Automatically create a <code>binary_sensor.magic_areas_wiab_$area</code></li> <li>Use it for presence tracking in that area</li> </ul> <p>Tip</p> <p>Use this feature for enclosed spaces like:</p> <ul> <li>Bathrooms \ud83d\udebb</li> <li>Bedrooms \ud83d\udeaa</li> <li>Offices with doors \ud83e\uddd1\u200d\ud83d\udcbb</li> <li>Garages</li> <li>Laundry rooms ...</li> </ul> <p>For even more precise presence, pair Wasp in a Box with BLE Tracker Monitor and other presence sources.</p>"},{"location":"how-to/getting-started/","title":"Getting Started","text":"<p>You\u2019ve already [[installed|Installation]] Magic Areas\u2014awesome! \ud83c\udf89 Now let\u2019s walk through how to set up your home with Magic Areas to make every room magical.</p>"},{"location":"how-to/getting-started/#step-1-define-your-areas","title":"\ud83c\udfe0 Step 1: Define Your Areas","text":"<p>If you haven\u2019t paid much attention to Home Assistant\u2019s Area Registry before, now is the time!</p> <p>Go to Settings &gt; Areas and make sure every room or zone in your home is represented as an area. Since you're here, if your home is multi-story, configure the each Floor and assign areas to them.</p> <p>Once you\u2019ve created your areas, go to Settings &gt; Devices &amp; Services &gt; Integrations, click + Add Integration, search for Magic Areas, and create a Magic Area for each of your defined areas.</p>"},{"location":"how-to/getting-started/#step-2-configure-each-magic-area","title":"\u2699\ufe0f Step 2: Configure Each Magic Area","text":"<p>After creating a Magic Area, go back to the Integrations page, find the Magic Areas entry for that area, and click Configure.</p> <p>All options are available in the UI, and every setting includes a helpful description.</p> <p>\ud83d\udcac Not sure what a setting means? Join us on Discord\u2014we\u2019d love to help!</p>"},{"location":"how-to/getting-started/#step-3-include-or-exclude-entities","title":"\ud83d\udce5 Step 3: Include or Exclude Entities","text":"<p>Magic Areas uses entities assigned to areas in Home Assistant to determine presence and apply features.</p> <p>However, not all entities can be assigned to areas (e.g., those without a <code>unique_id</code>). No worries! You can:</p> <ul> <li>Use the <code>Include Entities</code> setting to manually assign unsupported entities to your Magic Area.</li> <li>Use the <code>Exclude Entities</code> setting to remove entities from all Magic Areas features (useful if something is incorrectly triggering presence or behavior).</li> </ul> <p>Note</p> <p>Includes/excludes apply globally across all features. Feature-specific exclusions are not currently supported.</p>"},{"location":"how-to/getting-started/#step-4-enable-features","title":"\u2728 Step 4: Enable Features","text":"<p>Magic Areas includes many powerful [[features|Features]]\u2014from presence-based lighting to climate control and media routing.</p> <p>After the basic configuration, you\u2019ll be prompted to select which features you want to enable for the area. The next screens will let you customize them in detail. Each setting includes descriptions to help you choose what fits best.</p>"},{"location":"how-to/getting-started/#somethings-not-right","title":"\ud83d\udee0\ufe0f Something\u2019s Not Right?","text":"<p>No worries! Try the following:</p> <ul> <li>Visit our [[Troubleshooting]] guide</li> <li>Join our Discord server for real-time help</li> <li>Or open an issue on GitHub</li> </ul> <p>Now go forth and bring your house to life\u2014with Magic Areas \u2728</p>"},{"location":"how-to/implementation-ideas/","title":"Implementation Ideas","text":"<p>This is the \"meta\" cookbook which condenses the multiple features and tricks of Magic Areas to magically and accurately (YMMV) track presence in every room of your house!</p> <p>Warning</p> <p>Magic Areas strength is on stacking multiple somewhat-reliable sources of presence into a nice solid and reliable presence tracking system. You will likely need to use multiple sources of presence that will be good at one situation (static vs moving, for example) but bad at others until you cover all the situations. Magic Areas has features (such as \"Keep-only sensors\") that allow you to use even flappy or slow sensors.</p>"},{"location":"how-to/implementation-ideas/#general-considerations","title":"General considerations","text":""},{"location":"how-to/implementation-ideas/#mmwave-sensors","title":"mmWave sensors","text":"<p>mmWave sensors are the absolute GOAT of human sensing. Some can be finicky to set up but once up and running they're reliable. mmWave sensors are not very good for exterior areas as there are lots of moving things, winds and animals. \"Keep-only\" functionality on Magic Areas allows us to bypass false-positives with curtains moving and animals but still might not be ideal.</p> <p>Tip</p> <p>I recommend putting mmWave sensors in the \"keep-only sensors\" list and having a PIR motion sensor in the area alongside to avoid false-triggers.</p>"},{"location":"how-to/implementation-ideas/#mmwave-and-pir-sensor-positioning","title":"mmWave and PIR sensor positioning","text":"<p>Most presence sensors are able to sense the area in front of them, usually a cone shape with the tip being on the sensor, spreading out. This is called the sensor's field-of-view (FoV).</p>"},{"location":"how-to/implementation-ideas/#pir-sensors","title":"PIR sensors","text":"<p>PIR sensors are reliable and fast but they only detect movement, not people standing still. PIR's use infrared light (heat) and detect a change in that source's position across its FoV. It can't tell where you moved, which direction you moved, just that you moved.</p> <p>Tip</p> <p>You should place them with their FoV towards the access of rooms, usually in the ceiling corner facing the area you walk through after you go through the door.</p> <p>Failure</p> <p>Avoid placing looking directly at the door or it will trigger when you walk past the room.</p>"},{"location":"how-to/implementation-ideas/#mmwave-sensors_1","title":"mmWave sensors","text":"<p>These can be pointed wide in a corner as their FoV is usually wide and deep. You will need to tweak its settings until you're covering the room and not the other adjacent rooms as well. Prefer pointing mmWave sensors towards exterior walls rather than interior walls, when possible.</p> <p>Note</p> <p>As you can see, PIR and mmWave have different positioning requirements and while PIR+mmWave combo sensors might be good for themselves on reducing false positives, they lose where their positioning is the same for both sensors. Magic Areas has the \"keep-only sensors\" functionality that will take care of reducing false-positives for you.</p>"},{"location":"how-to/implementation-ideas/#sensing-presence-on-dumb-devices","title":"Sensing presence on dumb devices","text":"<p>A quick and dirty way to detect a device being in use (and thus using this information to trigger presence) is to use a power-metering smart outlets. There are a plethora of those on the market for very little. Unless you need to actually control the outlet, you can find metering-only smart outlets (with no relay). These can be cheaper and you don't risk accidentally turning off the device.</p> <p>Plug your device into the outlet, see how much it draws when in use, add a Threshold sensor and set its device class to <code>presence</code> and add this entity to the area in question. Magic Areas will automatically pick it up and start using it as a presence source.</p> <p>This is particularly useful for detecting workstation use through monitor power consumption, gym equipment use (e.g. treadmills), appliance use in the kitchen, knowing if an IR-controlled (not smart) light is actually on etc. Make sure the smart outlet is rated for the device you're plugging in! If you're plugging in anything with a motor or a heating element on it, do not skip this step.</p>"},{"location":"how-to/implementation-ideas/#wasp-in-a-box","title":"Wasp in a box","text":"<p>This is an interesting concept where when movement is detected on a room with closed doors, presence is inferred to be kept until a door is open. This is ideal for rooms where you usually close the door when you're in, like bathrooms (if you to pee with the doors open, then that isn't for you), bedrooms at bedtime, garages, laundry rooms etc. I will re-mention Wasp in a box on appropriate rooms below.</p> <p>Warning</p> <p>Wasp in a box track [[aggregates|Aggregation]] sensors and thus will consider ALL doors and motion sensors in an area.</p>"},{"location":"how-to/implementation-ideas/#ble-trackers","title":"BLE Trackers","text":"<p>BLE trackers are excellent for keeping presence reliably but they have a slow initial detection and occasional \"flapping\" between areas. We recommend using BLE trackers as \"keep only sensors\".</p> <p>This feature is designed to support most BLE tracker integrations such as Bermuda, ESPresence, Room Assistant etc. I personally use Bermuda, but you do you.</p> <p>Failure</p> <p>Tracking of BLE devices needs that you go \"all in\" and add BLE proxies/trackers to almost every room to avoid situations where you're in a room that doesn't have a tracker but it's next to a room that does have a tracker, thus marking you on the wrong room.</p>"},{"location":"how-to/implementation-ideas/#indoor-cameras-are-creepy-but-hear-me-out","title":"Indoor cameras are creepy, but hear me out","text":"<p>If you can safely deploy cloudless/fully-local/isolated cameras, then I recommend using cameras on your interior common areas paired with Frigate for person detection as a presence source.</p>"},{"location":"how-to/implementation-ideas/#sleep-states","title":"Sleep States","text":"<p>I use Adaptive Lighting in all my rooms as most of my lights are at least dimmable. Adaptive Lighting provide a <code>switch</code> called \"Sleep Mode\" which is used by that integration to control your lights brightness and color in a different way.</p> <p>Magic Areas can use those switches as \"Sleep State\" sensors. You can use any binary-state entity (<code>input_boolean</code>, <code>switch</code>, <code>binary_sensor</code>, etc) but it's very convenient to just reuse Adaptive Lighting's \"Sleep Mode\" switch. I like to make a <code>group</code> of switches with all the \"Sleep Mode\" switches from the common areas (basically everything that is not a bedroom) in the <code>all</code> mode. That way I can control the sleep state of all those areas at once via automations.</p>"},{"location":"how-to/implementation-ideas/#automating-sleep-states","title":"Automating sleep states","text":"<p>For common areas, I have a Template binary sensor called <code>night_mode</code> based off <code>sensor.time</code> that is <code>on</code> during the period of 00h00 until 08h00. I have an automation listening to changes in that binary sensor. You can totally just make the automation trigger on time directly but I use that sensor in other automations.</p> <p>For each bedroom there's a different automation. My kid's room is triggered by her smart speaker playing after <code>sun.sun</code> is <code>below_horizon</code> (she sleeps with \"sleep songs\"). Master bedroom is triggered by the bed sensor detecting occupancy for over 10m and the TV is off. The guest bedroom is triggered by the <code>night_mode</code> sensor as well.</p>"},{"location":"how-to/implementation-ideas/#sleep-lights","title":"Sleep lights","text":"<p>I highly recommend having in every room possible a light source that is faint (or can be made faint) and small. These are great for when you're walking around the house in pitch black and you surely don't want bright lights being turned on by Magic Areas. Most ceiling lights will be either too bright at the minimum level or not even turn on when you dim them too low. It's best to use smaller lamps or decorative lights that can be run ~20-25% and give a good faint glow that is enough to light your path without hurting your eyes or disturbing nearby areas (for example, in the US, usually internal doors are required to have a significant gap behind them and light will leak from these gaps into the room).</p>"},{"location":"how-to/implementation-ideas/#timeouts-and-extended-state","title":"Timeouts and extended state","text":"<p>Magic Areas uses timeout settings to release the occupancy state of an area after not seeing any presence states for a while. These timeouts are configurable for regular occupancy, extended and sleep states. Extended state is gained after presence is held in an area after a configurable amount of time. This state can be used for light control but also overrides the regular timeout, allowing one to configure a longer timeout if an area has been occupied for this extended time.</p> <p>Warning</p> <p>Fine-tuning those timeouts are key for consistent presence tracking. Prefer slower (bigger) timeouts and only pull back after you have more presence sources. Reliable presence sources such as mmWave, BLE Trackers or Wasp in a box might allow you to live with shorter \"clear timeouts\".</p>"},{"location":"how-to/implementation-ideas/#exterior","title":"Exterior","text":""},{"location":"how-to/implementation-ideas/#front-yard-porch","title":"Front Yard / Porch","text":"<p>The first thing to do is add a contact sensor to your front door. You may add this sensor to either your entry hall or the front yard / porch area, then force-add (using \"include entities\" option) to the other area. Use outdoor-rated motion sensors plus person-detection with your cameras (e.g. Frigate) if you happen to have it.</p> <p>Motion sensors / person detection will be your initial trigger with the door holding presence while your stationary talking to someone at your door or putting the groceries / packages / mail in.</p> <p>As your front door is susceptible to a lot of noisy movement sources, it might false trigger a LOT. In order to mitigate that you can try the following: * Remove motion as source of presence * Use outdoor-rated motion sensors that can be tuned to ignore smaller targets (animals) * Use person-detection from Frigate, delineate a perimeter and exclude the sidewalk. This way you only will have triggers when someone crosses into your property.</p>"},{"location":"how-to/implementation-ideas/#backyard","title":"Backyard","text":"<p>Backyard will work similarly as the front yard but you can't rely on door sensors to keep presence up because one usually does not keep their backyard door open. You will need to rely either on person detection with cameras, add more motion sensors and play with \"clear timeout\" to be lax enough (~15m on extended mode should work).</p> <p>On houses, you can split the backyard into three areas: one for the main backyard in the back of the house and one for each \"side strips\" (if you have it). This only makes sense if you have controllable lights on these \"side strips\". Then add the strips \"area state tracker\" sensor to the main backyard via \"include entities\".</p> <p>Note</p> <p>We're putting those side strips in the backyard because they're usually behind the fence. If yours are not like this, feel free to play around.</p>"},{"location":"how-to/implementation-ideas/#interior","title":"Interior","text":""},{"location":"how-to/implementation-ideas/#entry-hall","title":"Entry hall","text":"<p>One usually doesn't \"hang out\" in their entry hall unless they're talking to someone at the door. This make's the entry hall a similar candidate as the front yard / porch. Add the door (contact) sensor to keep presence and a motion sensor to trigger it initially. For the same reason, you can safely set a low \"clear timeout\" to maximize your energy savings (if using \"light control\").</p>"},{"location":"how-to/implementation-ideas/#living-room-dining-room","title":"Living Room &amp; Dining Room","text":"<p>These areas have the challenge of constantly having \"standing still\" occupancy while users are sitting down on the couch or at the table eating. This is a classic mmWave + PIR motion sensor scenario as power outlets are usually widely available on these areas. Person detection with indoor cameras can help but placing the cameras free of obstructions can be challenging. These areas have no doors (usually) so wasp-in-a-box is out of question. BLE trackers are particularly useful here as well.</p> <p>Since those are high traffic (passing by) areas usually, be sure to set the \"extended time\" somewhat long (~5m) and the \"extended timeout\" also long, so the area has a \"slow release\" avoiding false-clears.</p>"},{"location":"how-to/implementation-ideas/#hallways","title":"Hallways","text":"<p>It depends on the kind of hallway. If your hallway is a passage only, meaning you'd rarely stand there for a while, then you might be able to get away with motion sensors and an appropriate \"clear timeout\". If you have closets, you may want to add contact sensors to the closet's doors.</p>"},{"location":"how-to/implementation-ideas/#family-room","title":"Family Room","text":"<p>Family room follows the same concept of living &amp; dining room, except that you can use \"watching the tv\" as a presence source. This can be achieved the following ways:</p> <ul> <li>(if your TV is dumb -- not smart) Use a power-metering smart outlet, note the consumption with the TV off and with the TV on, add a Threshold sensor for when the TV is on, use that sensor as presence source on that area.</li> <li>(if your TV is smart) Use the media player state</li> </ul> <p>BLE trackers are particularly useful here as well. Make sure to follow the \"extended time\" and \"extended timeout\" recommendations from Living Room &amp; Dining Room above.</p>"},{"location":"how-to/implementation-ideas/#kitchen","title":"Kitchen","text":"<p>Apart from the regular motion / mmWave sensors, kitchen can have a few more source of presence:</p> <ul> <li>(with a smart fridge) Use the door sensors of that device</li> <li>(with a dumb fridge) Add contact sensors to the doors</li> <li>(if your sink has a pull-out shower head) Strap a vibration sensor to the shower head hose under the sink. That baby slaps when water runs through it.</li> <li>(if you have a pantry) Use the pantry door sensor</li> <li>Use vibration sensors under your countertop as presence sources to catch when you're cutting stuff or placing dishes / glasses down.</li> <li>Use power-metering smart outlets with Threshold sensor to trigger presence when using appliances such as toaster, kettle etc.</li> </ul> <p>If you don't have an mmWave sensor in the kitchen, you will need to play with the \"extended time\" and \"extended timeout\" to ensure consistent tracking.</p>"},{"location":"how-to/implementation-ideas/#pantry-closets-and-maybe-attics-small-sheds","title":"Pantry &amp; Closets (and maybe Attics &amp; small sheds)","text":"<p>These are areas where you don't usually close the door behind you, they have their doors closed when not in use and open while in use. A single door (contact) sensor should be enough to keep the area occupied while the door is open and clear when closed. This allows us to set \"clear timeout\" to 0 (zero) thus instantly releasing the occupancy state when the doors are closed.</p> <p>Note</p> <p>It really only makes sense to create these \"sub areas\" for closets and pantries if you have lights (or other supported devices) to control automatically, otherwise you can add their door contact sensors directly to the parent area.</p> <p>Warning</p> <p>Make sure to add the closet's area state tracker sensor to the area that holds the closet itself (e.g. bedroom, hallway) so their presence is kept while the closet is in use.</p>"},{"location":"how-to/implementation-ideas/#bathrooms","title":"Bathrooms","text":"<p>I've tried almost everything here. Motion sensors alone won't cut it, as you might already have some experience with it. Tracking humidity for baths works initially but either fails to keep tracking or fails to stop tracking. mmWave sensors are the absolute best option here but my peeve is that bathrooms don't usually benefit from well placed outlets.</p> <p>mmWave sensors will usually \"steal\" one of your precious limited outlets, even thou battery-operated \"sleeper\" mmWave sensors exists, wired ones are more common. If you have a smart speaker there and only a 1-gang outlet, you're out of outlets for hair dryers and so. Also, usually the outlet isn't where the mmWave sensor would be better placed so likely you'll have a cord going unsightly.</p> <p>Wasp in a box are very good at this, have a contact sensor at the door, a battery powered motion sensor at a corner and you should be OK. (for the most part).</p> <p>Note</p> <p>mmWave are the best, if you can live with the issues described above, go for it. If not, wasp in a box is your friend!</p> <p>Failure</p> <p>Don't add door sensors as presence sensors as those areas usually have doors open while unnocupied.</p> <p>Warning</p> <p>\"Clear timeout\" setting for bathrooms is an artform and you will have to fiddle with it a bit as it will depend on your presence sources and how well they work. If wasp in a box is working reliable for you, you may be able to set a low \"clear timeout\".</p> <p>Tip</p> <p>If you have an exhaust fan in your bathroom, you may want to use a humidity sensor paired with the [[Fan Groups|Fan-Groups]] feature tracking <code>humidity</code> of the area. This will automatically control your bathroom exhaust as needed.</p>"},{"location":"how-to/implementation-ideas/#bedrooms","title":"Bedrooms","text":"<p>Bedrooms also should have at least a PIR motion sensor and a mmWave sensor. BLE trackers are particularly useful here as well. You can get fancy and use \"bed sensors\", either off-the-shelf or DIY using load-cells/bathroom scales (just google it).</p> <p>Wasp-in-a-box works well for bedrooms but only for bedtime when doors are actually closed (if you do close your doors on your bedrooms, of course). If you don't use wasp-in-a-box then setting a slow (~30m) \"extended timeout\" is recommended.</p> <p>Warning</p> <p>If you have a suite bedroom, make sure to use the attached bathroom's area state tracker sensor as a presence sensor on the bedroom. This will help keep the bedroom occupied while you go to the bedroom in the middle of the night, otherwise your bedroom could go \"clear\" and when you walk back, the lights would turn on on you.</p> <p>Tip</p> <p>If you have a TV on your bedroom, you can add it as a presence source the same way as in the Family Room.</p> <p>Tip</p> <p>If you have fans in your bedroom, you can use [[Fan Groups|Fan-Groups]] to control them based off the area's temperature (you will need a temperature sensor in the area, evidently).</p> <p>Tip</p> <p>On your own bedroom, you may get away from using an mmWave sensor if you have a BLE tracker and usually have your phone or smartwatch on you all the time.</p>"},{"location":"how-to/implementation-ideas/#home-offices","title":"(Home) Offices","text":"<p>Areas that have computers on while in use can use this information for presence tracking. It's recommended that your computer is configure to auto-sleep after being idle for a while, in order to release presence. You can get this information from * Ping sensor * Integration with networking software (e.g. Unifi) * Using a power-metering smart outlet to measure the consumption of your monitors. If you have more than one, use a T-splitter and connect all of them to the same metering outlet.</p> <p>If you mostly use this are for using the computer, that alone + PIR motion sensor should do the trick. If you perform actions where you're sitting still but not on your computer (e.g. reading), you will need an mmWave sensor or a contact sensor with Wasp-in-abox (although you need to remember to close the door every time before reading). In this case you can set a pretty low \"clear timeout\".</p> <p>Tip</p> <p>Using a vibration sensor on your chair can also work as source of presence, considering you have the habit of moving back and forth with the backrest or swinging your legs often.</p>"},{"location":"how-to/implementation-ideas/#garage-and-bigger-sheds","title":"Garage (and bigger sheds)","text":"<p>Garages are usually cluttered spaces which hinders the ability of motion sensors (PIR) of working at their best by having a lot of blind spots. This can be countered by adding more motion sensors but this will result in more batteries for you to change. My garage has 3 accesses, the main garage door, a side door to the outside and a door to the inside of the house. I have contact sensors on all of those accesses and I use the <code>door</code> sensors as presence sensing. I have a camera doing person detection via Frigate, a single motion sensor up in a corner opposite to the camera and the Wasp-in-a-box feature turned on.</p>"},{"location":"how-to/implementation-ideas/#basement","title":"Basement","text":"<p>Basements follow the same challenges as garages but it's not unusual to have the main access door open while you're down there so Wasp-in-a-box would not consistently help here. If you do usually close the door behind you (or it has auto-close), then Wasp-in-a-box will be useful. mmWave with a couple PIR motion sensors would be the best.</p>"},{"location":"how-to/implementation-ideas/#gym","title":"Gym","text":"<p>If you use powered machines like treadmills, bikes, plug them into power-metering smart outlets and use a Threshold sensor to detect them being used. mmWave, Wasp-in-a-box and BLE trackers can also be used here. If you usually exercise with a smart speaker in the room, you can use this media player device as presence tracking as well.</p>"},{"location":"how-to/implementation-ideas/#meta-areas","title":"Meta-Areas","text":"<p>Meta-Areas are areas that are not Home Assistant areas but rather represent logical groups of areas. In Magic Areas, you can specify whether the area is an interior or exterior area. This allows 3 meta-areas to be created: One for all interior areas, one for all exterior areas and a \"Global\" meta-area for all areas.</p> <p>This allows you to have things like: * Average temperature of your home's interior. (and all other aggregates) * Average illuminance of the exterior (to use as an \"Area light sensor\"). * Control all lights in a floor at the same time.</p> <p>There are additional features that are exclusive to meta-areas such as the [[Area-aware media player|Area-aware-media-player]] and features that are not exclusive to meta-areas but makes more sense in meta-areas such as [[Climate control|Climate-control]].</p>"},{"location":"how-to/implementation-ideas/#exterior-meta-area","title":"Exterior meta-area","text":"<p>I do recommend having illuminance sensors across your exterior areas for more accurate exterior luminance aggregation on the exterior meta-area.</p>"},{"location":"how-to/implementation-ideas/#floor-meta-areas","title":"Floor meta-areas","text":"<p>I love those areas to tie my thermostat to the aggregate state of floors. Since I have a dual zone HVAC that exposes two climate entities to home assistant, I add [[Climate control|Climate-control]] to each floor pointing to each climate device. If you have a single zone HVAC in a two story house, you can use the Interior meta-area instead.</p>"},{"location":"how-to/installation/","title":"Installation","text":"<p>Magic Areas can be installed in two ways: through HACS (recommended), or manually.</p>"},{"location":"how-to/installation/#installing-via-hacs-recommended","title":"\ud83d\ude80 Installing via HACS (Recommended)","text":"<p>Magic Areas is available in the HACS default repository. Just follow these steps:</p> <ol> <li>Open HACS in your Home Assistant interface.</li> <li>Go to Integrations.</li> <li>Click the + Explore &amp; Download Repositories button.</li> <li>Search for <code>Magic Areas</code>.</li> <li>Click Download to install.</li> </ol> <p>Once downloaded, restart Home Assistant.</p>"},{"location":"how-to/installation/#manual-installation","title":"\ud83d\udee0\ufe0f Manual Installation","text":"<p>Prefer to install manually? Here's how:</p> <ol> <li>Download the <code>magic_areas</code> integration folder from the GitHub repository.</li> <li>Copy the entire <code>magic_areas</code> folder into your Home Assistant's <code>custom_components/</code> directory:</li> </ol> <pre><code>&lt;config&gt;/custom_components/magic_areas\n</code></pre> <ol> <li>Restart Home Assistant.</li> </ol>"},{"location":"how-to/installation/#setting-up-magic-areas","title":"\u2699\ufe0f Setting Up Magic Areas","text":"<p>Once installed, setup is done entirely through the Integrations UI:</p> <ol> <li>Go to Settings &gt; Devices &amp; Services &gt; Integrations</li> <li>Click + Add Integration</li> <li>Search for <code>Magic Areas</code></li> <li>Select the integration, choose an area to configure, and submit</li> </ol> <p>Magic Areas will now appear on your Integrations page. You can click Configure at any time to adjust its options. See each [[feature|Features]] for information on the configuration options for each.</p>"},{"location":"how-to/installation/#enabling-debug-logs-optional","title":"\ud83d\udc1b Enabling Debug Logs (Optional)","text":"<p>Having trouble or want to dive deeper? You can enable debug logs by adding the following to your <code>configuration.yaml</code>: <pre><code>logger:\n  default: warning\n  logs:\n    custom_components.magic_areas: debug\n</code></pre></p> <p>Then restart Home Assistant. Debug messages will now appear in your logs.</p>"},{"location":"how-to/installation/#whats-next","title":"\u2705 What\u2019s Next?","text":"<p>Once Magic Areas is installed and running, check out the [[Getting Started]] guide to learn how to make your first area magical!</p>"},{"location":"how-to/troubleshooting/","title":"Troubleshooting","text":"<p>If you\u2019ve followed our [[Installation]] and [[Getting Started|Getting-Started]] guides, things should be smooth sailing \ud83d\udef6\u2014but if something\u2019s acting weird, this page will help you debug it.</p>"},{"location":"how-to/troubleshooting/#step-1-enable-logging","title":"\ud83e\uddea Step 1: Enable Logging","text":"<p>The first step to troubleshooting is turning on logging so you can see what\u2019s going on behind the scenes.</p> <p>\ud83d\udfe1 Tip: Use <code>info</code> level for general debugging. Use <code>debug</code> only as a last resort\u2014it\u2019s very verbose.</p>"},{"location":"how-to/troubleshooting/#basic-logging-setup","title":"\ud83d\udd0d Basic Logging Setup","text":"<p>Add this to your <code>configuration.yaml</code>:</p> <pre><code>logger:\n  default: warning\n  logs:\n    custom_components.magic_areas: info\n</code></pre>"},{"location":"how-to/troubleshooting/#debug-a-specific-feature","title":"\ud83c\udfaf Debug a Specific Feature","text":"<p>If you\u2019re debugging a specific platform (like <code>media_player</code> for [[Media Player Groups|Media-Player-Groups]] or [[Area-Aware Media Player|Area-Aware-Media-Player]]), you can target that platform directly:</p> <pre><code>logger:\n  default: warning\n  logs:\n    custom_components.magic_areas.media_player: debug\n</code></pre>"},{"location":"how-to/troubleshooting/#debug-area-initialization-load-issues","title":"\ud83e\uddf1 Debug Area Initialization / Load Issues","text":"<p>To debug area loading and avoid noisy output from other features, you can enable debug globally for <code>magic_areas</code> while silencing the individual platforms:</p> <pre><code>logger:\n  default: warn\n  logs:\n    custom_components.magic_areas: debug\n    custom_components.magic_areas.base: warn\n    custom_components.magic_areas.binary_sensor: warn\n    custom_components.magic_areas.light: warn\n    custom_components.magic_areas.climate: warn\n    custom_components.magic_areas.media_player: warn\n    custom_components.magic_areas.sensor: warn\n    custom_components.magic_areas.switch: warn\n    custom_components.magic_areas.cover: warn\n    custom_components.magic_areas.config_flow: warn\n</code></pre> <p>Once enabled, restart Home Assistant and check the Logs section under Developer Tools. Most errors are self-explanatory.</p>"},{"location":"how-to/troubleshooting/#common-issues","title":"\u2757 Common Issues","text":""},{"location":"how-to/troubleshooting/#entity-not-being-added-to-an-area","title":"\ud83d\udeab Entity Not Being Added to an Area","text":"<p>If an entity doesn\u2019t seem to be included in a Magic Area:</p> <ol> <li>Go to Developer Tools &gt; States or use the Entity Filter menu.</li> <li>Check that the entity:</li> <li>\u2705 Belongs to a [[supported platform|Presence-Sensing#supported-presence-sources]]</li> <li>\u2705 (If it\u2019s a <code>binary_sensor</code>) Has a <code>device_class</code> that is [[supported for presence sensing|Presence-Sensing]]</li> <li>\u2705 Is actually assigned to an area in Home Assistant</li> </ol> <p>If any of the above isn\u2019t true, the entity may not be recognized by Magic Areas. Use <code>Include Entities</code> in the configuration to override it if needed.</p>"},{"location":"how-to/troubleshooting/#still-stuck","title":"\ud83c\udd98 Still Stuck?","text":"<p>No worries! You can:</p> <ul> <li>Open a GitHub issue with:</li> <li>A clear description of your setup and what\u2019s going wrong</li> <li>A log excerpt showing the problem (please format it!)</li> <li>Join our Discord community for help from other Magic Area users</li> </ul> <p>We\u2019re happy to help you get everything working! \ud83d\udcab</p>"}]}